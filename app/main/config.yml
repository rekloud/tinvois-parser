---
# Where the receipts are stored
# Receipts should be simple text files
receipts_path: "data/txt"

# Market names roughly ordered by likelyhood.
# Can contain market locations for fuzzy parsing
markets:
  Colruyt:
     - colruyt
     - Colruyt
  Delhaize:
     - Delhaize
     - delhaize
  Penny:
     - penny
     - p e n n y
     - m a r k t gmbh
  REWE:
     - rewe
  Real:
     - real
  Kaufland:
    - kaufland
  Netto:
     - netto-online
  Rossmann:
    - rossmann
  DM:
    - dm-drogerie
  Kaiser's:
     - kaiser
     - kaiserswerther
  Aldi:
     - aldi
     - friedrichstr 128â€”133
  Lidl:
     - lidl
  Edeka:
    - edeka
  Drogerie:
     - drogerie
  Kodi:
     - kodi
  Tankstelle:
     - shell
     - esso station
     - aral
     - total tankstelle
     - RK Tankstellen
     - tankstelle
  IKEA:
    - ikea
  Migros:
     - genossenschaft migros
  Apotheke:
    - apotheke
  Parkhaus:
    - parkhaus
    - parken
  Galeria Karstadt Kaufhoff:
    - karstadt
  H&M:
    - h&m
  Baushaus:
    - bauhauh
  Hornbach:
    - hornbach
  Hardeck:
    - hardeck

# Sum keys roughly ordered by likelyhood.
sum_keys:
  - summe
  - gesamtbetrag
  - gesamt
  - total
  - kaufsumme
  - endbetrag
  - zahlen
  - betrag
  - zwischensumme
  - sum
  - bar
  - te betalen

brutto_keys:
  - brutoo
  - total
  - gesamt
  - bruttoumsatz

netto_keys:
  - netto
  - nettobetrag
  - nettoumsatz

steure_keys:
  - steuer
  - mwst

paymentmethods:
  Cash:
    - bar
  EC:
    - girocard
    - lastschrift
    - ec


sum_format: '\d+(\.\s?|,\s?|[^a-zA-Z\d])\d{2}'

# Matches dates like 19.08.15 and 19. 08. 2015
#date_format: '(?P<date>(\d{2,4}(\.\s?|[^a-zA-Z\d])\d{2}(\.\s?|[^a-zA-Z\d])(19|20)?\d\d)\s+)'
#date_format: '(?:\d{1,2}[-/th|st|nd|rd|dot\s]*)?(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec|d{1,2})?[a-z\s,.]*(?:\d{1,2}[-/th|st|nd|rd|dot)\s,]*)+(?:\d{2,4})+'
date_format: '(?:\d{1,4})[/\.-]\s?(?:\d{1,2})*(?:jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec|okt|0kt|juni|juli|mai)?[a-z\s,.]*[/\.-]\s?(?:\d{1,4})+'

